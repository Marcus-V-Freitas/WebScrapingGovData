// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ExtractGovContext))]
    [Migration("20211003222919_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Domain.Models.ContactPoint", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fn")
                        .HasColumnType("longtext");

                    b.Property<string>("HasEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("IdCode");

                    b.ToTable("ContactPoints");
                });

            modelBuilder.Entity("Domain.Models.Distribution", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DownloadURL")
                        .HasColumnType("longtext");

                    b.Property<string>("MediaType")
                        .HasColumnType("longtext");

                    b.Property<int?>("RootIdCode")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("IdCode");

                    b.HasIndex("RootIdCode");

                    b.ToTable("Distributions");
                });

            modelBuilder.Entity("Domain.Models.DownloadUrlDocument", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GovInformationIdCode")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("IdCode");

                    b.HasIndex("GovInformationIdCode");

                    b.ToTable("DownloadUrlDocuments");
                });

            modelBuilder.Entity("Domain.Models.GovInformation", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("RootIdCode")
                        .HasColumnType("int");

                    b.HasKey("IdCode");

                    b.HasIndex("RootIdCode");

                    b.ToTable("GovInformations");
                });

            modelBuilder.Entity("Domain.Models.Publisher", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("IdCode");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Domain.Models.Root", b =>
                {
                    b.Property<int>("IdCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Access")
                        .HasColumnType("longtext");

                    b.Property<string>("AccessInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("AccessLevel")
                        .HasColumnType("longtext");

                    b.Property<string>("AppCategories")
                        .HasColumnType("longtext");

                    b.Property<int>("AvgRating")
                        .HasColumnType("int");

                    b.Property<string>("Banner")
                        .HasColumnType("longtext");

                    b.Property<string>("BureauCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Categories")
                        .HasColumnType("longtext");

                    b.Property<int?>("ContactPointIdCode")
                        .HasColumnType("int");

                    b.Property<string>("ContentOrigin")
                        .HasColumnType("longtext");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Documentation")
                        .HasColumnType("longtext");

                    b.Property<string>("Extent")
                        .HasColumnType("longtext");

                    b.Property<string>("GroupDesignations")
                        .HasColumnType("longtext");

                    b.Property<string>("Guid")
                        .HasColumnType("longtext");

                    b.Property<bool>("IEnumerableed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Id")
                        .HasColumnType("longtext");

                    b.Property<string>("Identifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Industries")
                        .HasColumnType("longtext");

                    b.Property<string>("Issued")
                        .HasColumnType("longtext");

                    b.Property<string>("Item")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("Keyword")
                        .HasColumnType("longtext");

                    b.Property<string>("LandingPage")
                        .HasColumnType("longtext");

                    b.Property<string>("Languages")
                        .HasColumnType("longtext");

                    b.Property<string>("LargeThumbnail")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModified")
                        .HasColumnType("longtext");

                    b.Property<string>("License")
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("Modified")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NumComments")
                        .HasColumnType("int");

                    b.Property<int>("NumRatings")
                        .HasColumnType("int");

                    b.Property<int>("NumViews")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("longtext");

                    b.Property<string>("ProgramCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Properties")
                        .HasColumnType("longtext");

                    b.Property<string>("ProxyFilter")
                        .HasColumnType("longtext");

                    b.Property<int?>("PublisherIdCode")
                        .HasColumnType("int");

                    b.Property<int>("ScoreCompleteness")
                        .HasColumnType("int");

                    b.Property<string>("Screenshots")
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Snippet")
                        .HasColumnType("longtext");

                    b.Property<string>("SpatialReference")
                        .HasColumnType("longtext");

                    b.Property<int>("SubInfo")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Temporal")
                        .HasColumnType("longtext");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeKeywords")
                        .HasColumnType("longtext");

                    b.Property<long>("Uploaded")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("IdCode");

                    b.HasIndex("ContactPointIdCode");

                    b.HasIndex("PublisherIdCode");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("Domain.Models.Distribution", b =>
                {
                    b.HasOne("Domain.Models.Root", null)
                        .WithMany("Distribution")
                        .HasForeignKey("RootIdCode");
                });

            modelBuilder.Entity("Domain.Models.DownloadUrlDocument", b =>
                {
                    b.HasOne("Domain.Models.GovInformation", null)
                        .WithMany("CompleteDownloadPaths")
                        .HasForeignKey("GovInformationIdCode");
                });

            modelBuilder.Entity("Domain.Models.GovInformation", b =>
                {
                    b.HasOne("Domain.Models.Root", "Root")
                        .WithMany()
                        .HasForeignKey("RootIdCode");

                    b.Navigation("Root");
                });

            modelBuilder.Entity("Domain.Models.Root", b =>
                {
                    b.HasOne("Domain.Models.ContactPoint", "ContactPoint")
                        .WithMany()
                        .HasForeignKey("ContactPointIdCode");

                    b.HasOne("Domain.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherIdCode");

                    b.Navigation("ContactPoint");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Domain.Models.GovInformation", b =>
                {
                    b.Navigation("CompleteDownloadPaths");
                });

            modelBuilder.Entity("Domain.Models.Root", b =>
                {
                    b.Navigation("Distribution");
                });
#pragma warning restore 612, 618
        }
    }
}
